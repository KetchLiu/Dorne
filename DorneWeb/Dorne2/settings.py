"""
Django settings for Dorne2 project.

Generated by 'django-admin startproject' using Django 2.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
import configparser

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# 定义配置文件
config = configparser.ConfigParser()
config.read(os.path.join(BASE_DIR, "config.ini"))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '$ukl0m8(&&9-vqf+h$12!)sbhott4fh56mo07vf#e_g7adru-+'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# session 设置
SESSION_COOKIE_AGE = 60 * 60  # 一个小时
SESSION_SAVE_EVERY_REQUEST = True

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'user.apps.UserConfig',
    'inventory.apps.InventoryConfig',
    'job.apps.JobConfig',
    'job.templatetags',
    'organization.apps.OrganizationConfig',
    'project.apps.ProjectConfig',
    'misc.apps.MiscConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Dorne2.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Dorne2.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

#DATABASES = {}
DB_HOST = config.get('db', 'HOST')
DB_PORT = config.get('db', 'PORT')
DB_USER = config.get('db', 'USER')
DB_PASSWORD = config.get('db', 'PASSWORD')
DB_DATABASE = config.get('db', 'DATABASE')
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': DB_DATABASE,
        'USER':DB_USER,
        'PASSWORD': DB_PASSWORD,
        'HOST': DB_HOST,
        'PORT': DB_PORT
    }
}



# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'zh-Hans'
# LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = False

USE_TZ = False

DATETIME_FORMAT = 'Y-m-d H:i:s'
DATE_FORMAT = 'Y-m-d'


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'


# 设置静态文件
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)
STATIC_ROOT = os.path.join(BASE_DIR, 'static_root')

AUTHENTICATION_BACKENDS = ['django.contrib.auth.backends.ModelBackend']

LOGIN_URL = '/user/login/'

AUTH_USER_MODEL = 'user.User'

ACCESS_AUTH_TOKEN = "https://api.cn.miaozhen.com/passport/token"
ACCESS_TOKEN_INFO = "https://api.cn.miaozhen.com/passport/token/info"
ACCESS_USER_INFO = "https://api.cn.miaozhen.com/passport/user/info"

JOB_LOG_DIR = config.get('path', 'job_logs')
PROJECT_DIR = config.get('path', 'projects')
INVENTORY_DIR = config.get('path', 'inventories')

GEARMAN_SERVER = config.get('gearman', 'server')
GIT_SYNC_PLAYBOOK = config.get('gearman', 'git_sync_playbook')
GIT_SYNC_INVENTORY = config.get('gearman', 'git_sync_inventory')
CALLBACK_HOST = config.get('gearman', 'callback_host')
